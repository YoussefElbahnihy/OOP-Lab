#include<iostream>
#include<cmath>

using namespace std;
#define el endl

class Data_X
{

public:

	double X[30];
	int y, n;

	friend istream& operator >>(istream& in, Data_X& A)
	{
		cout << "Enter element y ==> ";  in >> A.y;
		cout << "Enter number of elements X ==> "; in >> A.n;
		cout << "Enter elements of X ==> ";
		for (int i = 0; i < A.n; i++)
		{
			in >> A.X[i];
		}
		return in;
	}

	friend ostream& operator <<(ostream& out, Data_X& A)
	{
		out << "Elements of X is :" << el;
		for (int i = 0; i < A.n; i++)
		{
			out << "X[" << i << "] ==> " << A.X[i] << el;
		}
		return out;
	}

	double SumX()
	{
		double sum = 0;
		for (int i = 0; i < n; i++)
		{
			sum += X[i];
		}
		return sum;
	}

};

class Data
{

protected:

	Data_X A[30];
	double B[30];
	int n;

public:

	void Read()
	{
		cout << "enter number of elements (A,B) ==> "; cin >> n;
		for (int i = 0; i < n; i++)
		{
			cin >> A[i];
			B[i] = 0;
			for (int j = 0; j < A[i].n; j++)
			{
				if (fmod(A[i].X[i], A[i].y) == 0)
				{
					B[i] += A[i].X[j] * A[i].X[j];
				}
				else
				{
					B[i] += A[i].X[j] * A[i].X[j] * A[i].X[j];
				}
			}
		}
	}

	friend ostream& operator <<(ostream& out, Data& S)
	{
		for (int i = 0; i < S.n; i++)
		{
			out << S.A[i] << el;
			out << "Value of B[" << i << "] ==> " << S.B[i] << el << el;
		}
		return out;
	}

	friend double SumOfX(Data S)
	{
		double sum = 0;
		for (int i = 0; i < S.n; i++)
		{
			sum += S.A[i].SumX();
		}
		return sum;
	}

	friend double MaxSumInA(Data S)
	{
		double maxSum = S.A[0].SumX();
		for (int i = 1; i < S.n; i++)
		{
			if (maxSum < S.A[i].SumX())
			{
				maxSum = S.A[i].SumX();
			}
		}
		return maxSum;
	}

	friend void CompareMax(Data S, Data N)
	{
		if (MaxSumInA(S) > MaxSumInA(N))
		{
			cout << "Object 1 is max than Object 2 and it's value is ==> " << MaxSumInA(S) << el;
			cout << "Data of object 1 is :" << el;
			cout << S;
		}
		else
		{
			cout << "Object 2 is max than Object 1 and it's value is ==> " << MaxSumInA(N) << el;
			cout << "Data of object 2 is :" << el;
			cout << N;
		}
	}

};

void main()
{

	Data obj1, obj2;

	cout << "Enter elements of object 1:" << el;
	obj1.Read();

	cout << "\nEnter elements of object 2:" << el;
	obj2.Read();

	cout << "\nMax sum between all object 1 element is ==> " << MaxSumInA(obj1) << el;
	cout << "Max sum between all object 2 element is ==> " << MaxSumInA(obj2) << el << el;

	CompareMax(obj1, obj2);

}
