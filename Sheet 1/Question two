
// Solved by Youssef Ahmed

#include <iostream>
#include<cmath>
using namespace std;
struct Data
{
	float A[30];
	int y;
	string T[30];
	int n;
	void read()
	{
		cout << "Please Enter Element y:" << endl;
		cin >> y;
		cout << "Please Enter Number of Elements:" << endl;
		cin >> n;
		cout << "Please Enter Elements OF A:" << endl;
		for (int i = 0; i < n; i++)
		{
			cin >> A[i];
		}
	}
	void setelemetsT()
	{
		for (int i = 0; i < n; i++)
		{
			if (fmod(A[i],y) == 0)
			{
				T[i] = "yes";
			}
			else
			{
				T[i] = "no";
			}
		}
	}
	int CountNotDivisible()
	{
		int count = 0;
		for (int i = 0; i < n; i++)
		{
			if (T[i] == "no")
			{
				count++;
			}
		}
		return count;
	}
	int AvrOfDivisible()
	{
		float sum = 0;
		float count = 0;
		for (int i = 0; i < n; i++) {
			if (T[i] == "yes") {
				sum += A[i];
				count++;
			}
		}
		if (count > 0)
		{
			return (sum / count);
		}
		else
		{
			return 0;
		}
	}
	
	void print()
	{
		cout << "value of n = " << n << "\n";
		cout << "value of y = " << y << "\n";
		cout << "values of elements A:" << "\n";
		for (int i = 0; i < n; i++)
		{
			cout << "index" << i << " = " << A[i] << "\n";
		}
		cout << "values of elements T:" << "\n";
		for (int i = 0; i < n; i++)
		{
			cout << "index" << i << " = " << T[i] << "\n";
		}
	}
};

void AvrageCompare(Data &obj1, Data &obj2)
	{
		if (obj1.AvrOfDivisible() > obj2.AvrOfDivisible())
		{
			cout << "avg1 higher than avrage 2!!" << endl;
			cout << "avg1 = " << obj1.AvrOfDivisible() << endl;
		}
		else if (obj2.AvrOfDivisible() > obj1.AvrOfDivisible())
		{
			cout << "avg2 higher than avrage 1!!" << endl;
			cout << "avg2 = " << obj2.AvrOfDivisible()<< endl;
		}
		else
		{
			cout << "both have the same avrage!!" << "\n";
			cout << "avg1 = " << obj1.AvrOfDivisible() << "\n" << "avg2 = " << obj2.AvrOfDivisible() << endl;
		}
	}
int main() {
	Data obj1, obj2;
	cout << "Enter data for object 1:" << endl;
	obj1.read();
	obj1.setelemetsT();
	obj1.print();
	cout << "Enter data for object 2:" << endl;
	obj2.read();
	obj2.setelemetsT();
	obj2.print();
	AvrageCompare(obj1, obj2);
	cout << "Object 1 has " << obj1.CountNotDivisible() << " elements not divisible by y." << endl;
	cout << "Object 2 has " << obj2.CountNotDivisible() << " elements not divisible by y." << endl;
}
